#!/bin/bash

machine_type="amd64"
kernel_name="linux"

path_install_to="/usr/bin"

guess_package_manager(){
	local package_manager_res
	local package_managers="apt opkg"
	for package_manager in $package_managers
	do
		which $package_manager >/dev/null
		if [ $? == 0 ];then
			package_manager_res=$package_manager
			break
		fi
	done
	echo $package_manager_res
}

get_version_from_github(){
	local version=$(curl -s https://api.github.com/repos/"$1"/"$2"/releases | jq -r '.[0]' | jq -r ".tag_name" | sed 's/^v*//g')
	echo $version
}

get_version_from_bin(){
	local version=$($1 version | sed -n 1p | cut -d " " -f3 | sed 's/^v*//g')
	echo $version
}

install_bin(){
	local need_update="0"
	local org="SagerNet"
	local repo="sing-box"
	local version_new=$(get_version_from_github $org $repo)
	local version_cur=""
	local bins="sing-box"
	for bin in $bins
	do
		version_cur=$(get_version_from_bin $bin)
		if [ "$version_new" != "$version_cur" ];then
			need_update="1"
			break
		fi
	done
	if [ "$need_update" == "1" ];then
		local tmp_dir=`mktemp -d /tmp/"$repo"_bins.XXXXXX`
		cd $tmp_dir
		wget https://github.com/"$org"/"$repo"/releases/download/v"$version_new"/"$repo"-"$version_new"-"$kernel_name"-"$machine_type".tar.gz -O "$repo"-"$version_new"-"$kernel_name"-"$machine_type".tar.gz > /dev/null 2>&1
		tar xvf "$repo"-"$version_new"-"$kernel_name"-"$machine_type".tar.gz
		cd $tmp_dir/"$repo"-"$version_new"-"$kernel_name"-"$machine_type"
		/etc/init.d/sing-box_server stop > /dev/null 2>&1
		/etc/init.d/sing-box_tproxy stop > /dev/null 2>&1
		for bin in $bins
		do
			chmod +x $bin
			local version_new_bin=$(get_version_from_bin "./$bin")
			if [ "$version_new_bin" == "$version_new" ];then
				mv -f $bin $path_install_to/$bin
			fi
		done
		/etc/init.d/sing-box_tproxy start > /dev/null 2>&1
		/etc/init.d/sing-box_server start > /dev/null 2>&1
		rm -rf $tmp_dir
	fi
}

install(){
	pm=$(guess_package_manager)
	
	which curl > /dev/null
	if [ $? != 0 ];then
		$pm install curl -y
	fi
	which jq > /dev/null
	if [ $? != 0 ];then
		$pm install jq -y
	fi
	which tar > /dev/null
	if [ $? != 0 ];then
		$pm install tar -y
	fi

	install_bin
}

uninstall(){
	local bins="sing-box"
	for bin in $bins
	do
		rm -f $path_install_to/$bin
	done
}

update(){
	install_bin
}

case "$1" in
install)			install
					;;
uninstall)			uninstall
					;;
update)				update
					;;
*)					echo "Usage: install|uninstall|update"
					exit 2
					;;
esac
exit 0
